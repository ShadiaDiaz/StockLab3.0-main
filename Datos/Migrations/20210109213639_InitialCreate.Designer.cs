// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(StockLabContext))]
    [Migration("20210109213639_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Asignaturas", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Codigo");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("Entity.Chat", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Admi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPersona")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("IdPersona");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Entity.DetalleInsumo", b =>
                {
                    b.Property<string>("NumeroDetalle")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodigoInsumo")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SolicitudNumero")
                        .HasColumnType("varchar(5)");

                    b.HasKey("NumeroDetalle");

                    b.HasIndex("CodigoInsumo");

                    b.HasIndex("SolicitudNumero");

                    b.ToTable("DetalleInsumo");
                });

            modelBuilder.Entity("Entity.Insumo", b =>
                {
                    b.Property<string>("Item")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(4);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.HasKey("Item");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Entity.PeriodoAcademico", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Corte")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Codigo");

                    b.ToTable("PeriodosAcademicos");
                });

            modelBuilder.Entity("Entity.Persona", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Correo")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("UsuarioUser")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Identificacion");

                    b.HasIndex("UsuarioUser");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Entity.Solicitud", b =>
                {
                    b.Property<string>("Numero")
                        .HasColumnType("varchar(5)");

                    b.Property<int>("CantidadInsumos")
                        .HasColumnType("int");

                    b.Property<string>("CodigoAsignatura")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FechaEntrega")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("IdPeriodo")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("IdPersona")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Monitor")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("SolicitudFecha")
                        .HasColumnType("datetime");

                    b.HasKey("Numero");

                    b.HasIndex("CodigoAsignatura");

                    b.HasIndex("IdPeriodo");

                    b.HasIndex("IdPersona");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Entity.Usuario", b =>
                {
                    b.Property<string>("User")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Apellidos")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("IdPersona")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(15)");

                    b.HasKey("User");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entity.Chat", b =>
                {
                    b.HasOne("Entity.Persona", null)
                        .WithMany()
                        .HasForeignKey("IdPersona");
                });

            modelBuilder.Entity("Entity.DetalleInsumo", b =>
                {
                    b.HasOne("Entity.Insumo", null)
                        .WithMany()
                        .HasForeignKey("CodigoInsumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Solicitud", null)
                        .WithMany("Detalles")
                        .HasForeignKey("SolicitudNumero");
                });

            modelBuilder.Entity("Entity.Persona", b =>
                {
                    b.HasOne("Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioUser");
                });

            modelBuilder.Entity("Entity.Solicitud", b =>
                {
                    b.HasOne("Entity.Asignaturas", null)
                        .WithMany()
                        .HasForeignKey("CodigoAsignatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.PeriodoAcademico", null)
                        .WithMany()
                        .HasForeignKey("IdPeriodo");

                    b.HasOne("Entity.Persona", null)
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
